//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_Grab;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_default_PlayOrPause;
        
        private static SteamVR_Action_Boolean p_default_SkipBack;
        
        private static SteamVR_Action_Boolean p_default_SkipForward;
        
        private static SteamVR_Action_Boolean p_default_ToStart;
        
        private static SteamVR_Action_Boolean p_default_ClickLaser;
        
        private static SteamVR_Action_Boolean p_default_SpeedUp;
        
        private static SteamVR_Action_Boolean p_default_SpeedDown;
        
        private static SteamVR_Action_Boolean p_default_ResetCell;
        
        private static SteamVR_Action_Boolean p_default_SwapLaserColour;
        
        private static SteamVR_Action_Boolean p_default_SwapColourMode;
        
        private static SteamVR_Action_Vector2 p_default_ChangePointerSize;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        public static SteamVR_Action_Boolean default_Grab
        {
            get
            {
                return SteamVR_Actions.p_default_Grab.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_PlayOrPause
        {
            get
            {
                return SteamVR_Actions.p_default_PlayOrPause.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SkipBack
        {
            get
            {
                return SteamVR_Actions.p_default_SkipBack.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SkipForward
        {
            get
            {
                return SteamVR_Actions.p_default_SkipForward.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ToStart
        {
            get
            {
                return SteamVR_Actions.p_default_ToStart.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ClickLaser
        {
            get
            {
                return SteamVR_Actions.p_default_ClickLaser.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SpeedUp
        {
            get
            {
                return SteamVR_Actions.p_default_SpeedUp.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SpeedDown
        {
            get
            {
                return SteamVR_Actions.p_default_SpeedDown.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ResetCell
        {
            get
            {
                return SteamVR_Actions.p_default_ResetCell.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SwapLaserColour
        {
            get
            {
                return SteamVR_Actions.p_default_SwapLaserColour.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SwapColourMode
        {
            get
            {
                return SteamVR_Actions.p_default_SwapColourMode.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_ChangePointerSize
        {
            get
            {
                return SteamVR_Actions.p_default_ChangePointerSize.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_Grab,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_PlayOrPause,
                    SteamVR_Actions.default_SkipBack,
                    SteamVR_Actions.default_SkipForward,
                    SteamVR_Actions.default_ToStart,
                    SteamVR_Actions.default_ClickLaser,
                    SteamVR_Actions.default_SpeedUp,
                    SteamVR_Actions.default_SpeedDown,
                    SteamVR_Actions.default_ResetCell,
                    SteamVR_Actions.default_SwapLaserColour,
                    SteamVR_Actions.default_SwapColourMode,
                    SteamVR_Actions.default_ChangePointerSize,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_Grab,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_PlayOrPause,
                    SteamVR_Actions.default_SkipBack,
                    SteamVR_Actions.default_SkipForward,
                    SteamVR_Actions.default_ToStart,
                    SteamVR_Actions.default_ClickLaser,
                    SteamVR_Actions.default_SpeedUp,
                    SteamVR_Actions.default_SpeedDown,
                    SteamVR_Actions.default_ResetCell,
                    SteamVR_Actions.default_SwapLaserColour,
                    SteamVR_Actions.default_SwapColourMode,
                    SteamVR_Actions.default_ChangePointerSize};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_Grab,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_PlayOrPause,
                    SteamVR_Actions.default_SkipBack,
                    SteamVR_Actions.default_SkipForward,
                    SteamVR_Actions.default_ToStart,
                    SteamVR_Actions.default_ClickLaser,
                    SteamVR_Actions.default_SpeedUp,
                    SteamVR_Actions.default_SpeedDown,
                    SteamVR_Actions.default_ResetCell,
                    SteamVR_Actions.default_SwapLaserColour,
                    SteamVR_Actions.default_SwapColourMode};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[0];
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_ChangePointerSize};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_Grab,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_PlayOrPause,
                    SteamVR_Actions.default_SkipBack,
                    SteamVR_Actions.default_SkipForward,
                    SteamVR_Actions.default_ToStart,
                    SteamVR_Actions.default_ClickLaser,
                    SteamVR_Actions.default_SpeedUp,
                    SteamVR_Actions.default_SpeedDown,
                    SteamVR_Actions.default_ResetCell,
                    SteamVR_Actions.default_SwapLaserColour,
                    SteamVR_Actions.default_SwapColourMode,
                    SteamVR_Actions.default_ChangePointerSize};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_Grab = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Grab")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_PlayOrPause = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/PlayOrPause")));
            SteamVR_Actions.p_default_SkipBack = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SkipBack")));
            SteamVR_Actions.p_default_SkipForward = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SkipForward")));
            SteamVR_Actions.p_default_ToStart = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ToStart")));
            SteamVR_Actions.p_default_ClickLaser = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ClickLaser")));
            SteamVR_Actions.p_default_SpeedUp = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SpeedUp")));
            SteamVR_Actions.p_default_SpeedDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SpeedDown")));
            SteamVR_Actions.p_default_ResetCell = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ResetCell")));
            SteamVR_Actions.p_default_SwapLaserColour = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SwapLaserColour")));
            SteamVR_Actions.p_default_SwapColourMode = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SwapColourMode")));
            SteamVR_Actions.p_default_ChangePointerSize = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/ChangePointerSize")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
        }
    }
}
